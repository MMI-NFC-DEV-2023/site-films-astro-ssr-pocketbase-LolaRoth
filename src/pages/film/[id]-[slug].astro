---
import LinkPersonne from "../../components/LinkPersonne.astro";
import Layout from "../../layouts/Layout.astro";
import type {
  FilmsResponse,
  PersonneResponse,
  RolesResponse,
} from "../../pocketbase-typegen";
import IdFilm from "./ajoutRole/[idFilm].astro";

export const prerender = false;
const id = Astro.params.id;

const film = await Astro.locals.pb
  .collection<
    FilmsResponse<{
      producteur?: PersonneResponse;
      scenaristes?: PersonneResponse[];
      role?: RolesResponse<{ acteur: PersonneResponse }>[];
    }>
  >("films")
  .getOne(id!, { expand: "producteur, scenaristes, role.acteur" });
---

<!-- Affichage d'un seul film -->
<Layout pageTitle={`film : ${film.titre}`}>
   {
    Astro.locals.pb.authStore.isValid && (
      <a href={`/films/edit/${film.id}`}>Edit</a>
    )
  }
  <div>
          <h2>Film : {film.titre}</h2>
          <p>Année de sortie : {film.date_sortie}</p>
          {  film.expand?.producteur &&      <p>Producteur : <LinkPersonne {...film.expand?.producteur!}/></p>}
          {film.expand?.scenaristes && <p>Scénaristes : {film.expand?.scenaristes.map(s => (<LinkPersonne {...s}/>))}</p>}
          <p class="mb-4">Durée : {film.duree} minutes</p>
          { film.expand?.role &&  <p>Les roles :
              {film.expand?.role.map(r =>
              <span>Nom du role : {r.nom_role + ", "} <a href={`/films/SupprRole/${id}-${r.id}`} class="text-red-500">Supprimer le role</a></span>
              <span>Joué par : <LinkPersonne {...r.expand?.acteur!} /> </span>)}</p>
          }
          <a href={`/films/ajoutRole/${id}`} class="bg-pink-800 rounded-lg p-1.5 m-3 text-white">Ajouter un rôle</a>
  </div>
</Layout>